{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maisa\\\\Desktop\\\\Desafio\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Spinner } from 'reactstrap'; //import Index from '../Components/Index';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\n\nconst Index = data => // parenteses pois é uma array function, depois não preciso usar o return\n__jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }\n}, \"P\\xE1gina Inicial\", __jsx(\"div\", {\n  class: \"d-flex justify-content-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }\n}, __jsx(Spinner, {\n  color: \"dark\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }\n})));\n\nexport class MapContainer extends Component {\n  render() {\n    return __jsx(Map, {\n      google: this.props.google,\n      zoom: 7,\n      initialCenter: {\n        lat: -15.838317,\n        lng: -47.955428\n      } // poderia usar {data.response.localizacao} para puxar do BD\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\nexport default GoogleApiWrapper(props => ({\n  apiKey: ''\n}))(MapContainer);\n\nIndex.getInitialPropos = async () => {\n  var response = await axios.get(\"http://localhost:8080/index\");\n  console.log(response);\n  return {\n    response: response.data\n  };\n};","map":{"version":3,"sources":["C:/Users/maisa/Desktop/Desafio/pages/index.js"],"names":["React","Component","axios","Spinner","Map","GoogleApiWrapper","Index","data","MapContainer","render","props","google","lat","lng","apiKey","getInitialPropos","response","get","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CACA;;AACA,OAAO,sCAAP;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;;AAEA,MAAMC,KAAK,GAAIC,IAAD,IAAY;AAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEI;AAAK,EAAA,KAAK,EAAC,+BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACQ,MAAC,OAAD;AAAS,EAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADR,CAFJ,CADR;;AASA,OAAO,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACxCQ,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,MADrB;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,aAAa,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAC,SAAR;AAAmBC,QAAAA,GAAG,EAAE,CAAC;AAAzB,OAHjB,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AAXuC;AAa5C,eAAeR,gBAAgB,CAC1BK,KAAD,KAAY;AACVI,EAAAA,MAAM,EAAE;AADE,CAAZ,CAD2B,CAAhB,CAIVN,YAJU,CAAf;;AAMAF,KAAK,CAACS,gBAAN,GAAyB,YAAY;AACjC,MAAIC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,6BAAV,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,SAAO;AAACA,IAAAA,QAAQ,EAAEA,QAAQ,CAACT;AAApB,GAAP;AACH,CAJD","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Spinner } from 'reactstrap';\r\n//import Index from '../Components/Index';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nconst Index = (data) => ( // parenteses pois é uma array function, depois não preciso usar o return\r\n        <div>\r\n            Página Inicial\r\n            <div class=\"d-flex justify-content-center\">\r\n                    <Spinner color=\"dark\" />\r\n            </div>\r\n        </div>\r\n)\r\n  \r\nexport class MapContainer extends Component {\r\n    render() {\r\n      return (\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={7}\r\n          initialCenter={{ lat: -15.838317, lng: -47.955428 }}\r\n            // poderia usar {data.response.localizacao} para puxar do BD\r\n        >\r\n        </Map>\r\n      );\r\n    }\r\n}\r\nexport default GoogleApiWrapper(\r\n    (props) => ({\r\n      apiKey: '',\r\n    }\r\n  ))(MapContainer)\r\n\r\nIndex.getInitialPropos = async () => {\r\n    var response = await axios.get(\"http://localhost:8080/index\");\r\n    console.log(response);\r\n    return {response: response.data}\r\n}"]},"metadata":{},"sourceType":"module"}